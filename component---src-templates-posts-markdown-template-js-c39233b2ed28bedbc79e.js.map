{"version":3,"sources":["webpack:///./src/templates/posts-markdown-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","markdownRemark","data","frontmatter","html","a","createElement","className","dangerouslySetInnerHTML","__html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","Fragment","header","site","siteMetadata","title","paddingTop","_755544856","node","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-templates-posts-markdown-template-js-c39233b2ed28bedbc79e.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function Template({\n                                   data, // this prop will be injected by the GraphQL query below.\n                                 }) {\n  const { markdownRemark } = data; // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark;\n  return (\n    <Layout>\n      <SEO {...frontmatter} />\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query PostQuery($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"YYYY년 MM월 DD일 \")\n        path\n        title\n        description\n        keyword\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `#657b83`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 950,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql, Link } from \"gatsby\";\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 950,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer style={{\n            margin: `20px auto`\n          }}>\n            <div>\n              Mangosteen 블로그\n            </div>\n            <Link to=\"/posts/\">더 많은 Posts 보러가기</Link>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}